//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Permission {
  id Int [pk, increment]
  action String [not null]
  condition Json
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  subjectId Int
  subject Subject
  rolePermissions RolePermission [not null]

  indexes {
    (action, subjectId) [unique]
  }
}

Table Subject {
  id Int [pk, increment]
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  permissions Permission [not null]
}

Table RolePermission {
  id Int [pk, increment]
  roleId Int
  permissionId Int
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  permission Permission
  role Role

  indexes {
    (roleId, permissionId) [unique]
  }
}

Table Role {
  id Int [pk, increment]
  name String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  rolePermissions RolePermission [not null]
  user User [not null]
}

Table User {
  id Int [pk, increment]
  email String [unique, not null]
  roleId Int
  name String [not null]
  password String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  role Role
  isVerified Boolean [not null, default: false]
  passwordResetToken String [unique]
  passwordResetAt DateTime
  isSocialLogin Boolean [not null, default: false]
  socialProvider SocialProvider [not null, default: 'NONE']
  Rating Rating [not null]
  teacherCourses Course [not null]
  studentCourses Course [not null]
  studentProfile StudentProfile
  teacherProfile TeacherProfile
  orders Order [not null]
  wishlist Wishlist
  cart Cart
}

Table StudentProfile {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  dob DateTime
  occupation String
  phone BigInt
  institution String
  currentQualification String
  highestQualification String
  user User
  userId Int [unique]
  isEmailUpdates Boolean [not null, default: true]
}

Table TeacherProfile {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  title String
  biography String
  phoneNumber BigInt
  notifications TeacherNotification
  teacherNotificationId Int
  socialProfile SocialProfile
  socialProfileId Int
  user User
  userId Int [unique]
}

Table TeacherNotification {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  notifications TEACHER_NOTIFICATION_TYPE[] [not null]
  TeacherProfile TeacherProfile [not null]
}

Table SocialProfile {
  id Int [pk, increment]
  website String
  facebook String
  instagram String
  linkedin String
  twitter String
  youtube String
  whatsapp String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  TeacherProfile TeacherProfile [not null]
}

Table Transaction {
  id Int [pk, increment]
  medium PaymentMedium [not null, default: 'ESEWA']
  serviceId Int [unique, not null]
  customerId Int
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
}

Table Rating {
  id Int [pk, increment]
  message String [not null]
  rate Int [not null, default: 0]
  ratedBy User [not null]
  userId Int [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  course Course
  courseId Int
}

Table Course {
  id Int [pk, increment]
  courseId String [unique, not null]
  title String [not null]
  subtitle String [not null]
  price Float
  discountAmount Float
  discountPercent Int
  topic String
  language Language [not null, default: 'ENGLISH']
  subtitleLanguage Language [not null, default: 'ENGLISH']
  level Level [default: 'BEGINNER']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  category courseCategories [not null]
  categoryId Int [not null]
  subCategory courseCategories [not null]
  subCategoryId Int [not null]
  description String
  learnableContent String[] [not null]
  skills String[] [not null]
  welcomeMessage String
  congratulationMessage String
  instructors User [not null]
  students User [not null]
  ratings Rating [not null]
  sections Section [not null]
  thumbnail String
  trailer String
  order Order [not null]
  Wishlist Wishlist [not null]
  Cart Cart [not null]
  popularity Int [not null, default: 0]
}

Table courseCategories {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [unique, not null]
  description String
  parentCategoryId Int
  parentCategory courseCategories
  courseCategory courseCategories [not null]
  mainCourses Course [not null]
  subCourses Course [not null]

  indexes {
    (name, parentCategoryId) [unique]
  }
}

Table Duration {
  id Int [pk, increment]
  time String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
}

Table Section {
  id Int [pk, increment]
  name String [not null]
  listOrder Int [not null]
  lectures Lecture [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  Course Course
  courseId Int
}

Table Lecture {
  id Int [pk, increment]
  name String [not null]
  listOrder Int [not null]
  description String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  note Note
  noteId Int [unique]
  section Section [not null]
  sectionId Int [not null]
  length String
  video String
}

Table Note {
  id Int [pk, increment]
  noteDescription String
  noteFiles String[] [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  lecture Lecture
}

Table Order {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  course Course [not null]
  user User
  userId Int [unique]
}

Table Wishlist {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  course Course [not null]
  user User
  userId Int [unique]
}

Table Cart {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  course Course [not null]
  user User
  userId Int [unique]
}

Table Instructors {
  teachercoursesId Int [ref: > Course.id]
  instructorsId Int [ref: > User.id]
}

Table Students {
  studentcoursesId Int [ref: > Course.id]
  studentsId Int [ref: > User.id]
}

Table CourseToOrder {
  orderId Int [ref: > Order.id]
  courseId Int [ref: > Course.id]
}

Table CourseToWishlist {
  wishlistId Int [ref: > Wishlist.id]
  courseId Int [ref: > Course.id]
}

Table CartToCourse {
  cartId Int [ref: > Cart.id]
  courseId Int [ref: > Course.id]
}

Enum SocialProvider {
  FACEBOOK
  GOOGLE
  NONE
}

Enum TEACHER_NOTIFICATION_TYPE {
  WHO_BUY_COURSE
  WHO_WRITE_REVIEW
  WHO_COMMENT_COURSE
  WHO_REPLIED_COURSE
  DAILY_PROFILE_VISIT
  WHO_DOWNOAD_COURSE_ATTACHMENT
}

Enum PaymentMedium {
  ESEWA
  KHALTI
  FONEPAY
}

Enum Language {
  ENGLISH
  NEPALI
}

Enum Level {
  BEGINNER
  INTERMEDIATE
  PROFESSIONAL
}

Ref: Permission.subjectId > Subject.id

Ref: RolePermission.permissionId > Permission.id [delete: Cascade]

Ref: RolePermission.roleId > Role.id [delete: Cascade]

Ref: User.roleId > Role.id

Ref: StudentProfile.userId - User.id

Ref: TeacherProfile.teacherNotificationId > TeacherNotification.id

Ref: TeacherProfile.socialProfileId > SocialProfile.id

Ref: TeacherProfile.userId - User.id

Ref: Rating.userId > User.id

Ref: Rating.courseId > Course.id

Ref: Course.categoryId > courseCategories.id

Ref: Course.subCategoryId > courseCategories.id

Ref: courseCategories.parentCategoryId - courseCategories.id [delete: No Action]

Ref: Section.courseId > Course.id

Ref: Lecture.noteId - Note.id

Ref: Lecture.sectionId > Section.id

Ref: Order.userId > User.id

Ref: Wishlist.userId - User.id

Ref: Cart.userId - User.id